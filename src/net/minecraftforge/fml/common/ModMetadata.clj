(ns net.minecraftforge.fml.common.ModMetadata
  (:refer-clojure :only [require comment defn ->])
  (:import [net.minecraftforge.fml.common ModMetadata]))

(defn ->mod-metadata
  "Constructor."
  (^ModMetadata []
    (new ModMetadata )))

(defn mod-id
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-modId)))

(defn name
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-name)))

(defn description
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-description)))

(defn url
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-url)))

(defn update-url
  "Instance Field.

  Deprecated.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-updateUrl)))

(defn update-json
  "Instance Field.

  URL to update json file. Format is defined here: https://gist.github.com/LexManos/7aacb9aa991330523884

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-updateJSON)))

(defn logo-file
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-logoFile)))

(defn version
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-version)))

(defn author-list
  "Instance Field.

  type: java.util.List<java.lang.String>"
  (^java.util.List [^ModMetadata this]
    (-> this .-authorList)))

(defn credits
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-credits)))

(defn parent
  "Instance Field.

  type: java.lang.String"
  (^java.lang.String [^ModMetadata this]
    (-> this .-parent)))

(defn screenshots
  "Instance Field.

  type: java.lang.String[]"
  ([^ModMetadata this]
    (-> this .-screenshots)))

(defn parent-mod
  "Instance Field.

  type: transient net.minecraftforge.fml.common.ModContainer"
  ([^ModMetadata this]
    (-> this .-parentMod)))

(defn child-mods
  "Instance Field.

  type: transient java.util.List<net.minecraftforge.fml.common.ModContainer>"
  ([^ModMetadata this]
    (-> this .-childMods)))

(defn use-dependency-information
  "Instance Field.

  type: boolean"
  (^Boolean [^ModMetadata this]
    (-> this .-useDependencyInformation)))

(defn required-mods
  "Instance Field.

  type: java.util.Set<net.minecraftforge.fml.common.versioning.ArtifactVersion>"
  (^java.util.Set [^ModMetadata this]
    (-> this .-requiredMods)))

(defn dependencies
  "Instance Field.

  type: java.util.List<net.minecraftforge.fml.common.versioning.ArtifactVersion>"
  (^java.util.List [^ModMetadata this]
    (-> this .-dependencies)))

(defn dependants
  "Instance Field.

  type: java.util.List<net.minecraftforge.fml.common.versioning.ArtifactVersion>"
  (^java.util.List [^ModMetadata this]
    (-> this .-dependants)))

(defn autogenerated
  "Instance Field.

  type: transient boolean"
  ([^ModMetadata this]
    (-> this .-autogenerated)))

(defn get-child-mod-count-string
  "returns: `java.lang.String`"
  (^java.lang.String [^ModMetadata this]
    (-> this (.getChildModCountString))))

(defn get-author-list
  "returns: `java.lang.String`"
  (^java.lang.String [^ModMetadata this]
    (-> this (.getAuthorList))))

(defn get-child-mod-list
  "returns: `java.lang.String`"
  (^java.lang.String [^ModMetadata this]
    (-> this (.getChildModList))))

(defn printable-sorting-rules
  "returns: `java.lang.String`"
  (^java.lang.String [^ModMetadata this]
    (-> this (.printableSortingRules))))

